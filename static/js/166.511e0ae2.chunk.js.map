{"version":3,"file":"static/js/166.511e0ae2.chunk.js","mappings":"+SAEMA,EAAU,mCACVC,EAAU,+BAEHC,EAAiB,mCAAG,oGACRC,EAAAA,EAAAA,IAAA,uCACWH,EADX,+CADQ,cACzBI,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,qDAOvB,SAASC,EAAaC,EAAOC,GAClC,OAAOL,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAAqC,CAC1CQ,OAAQ,CACNC,QAASV,EACTO,MAAAA,EACAC,KAAAA,IAGL,CAEM,IAAMG,EAAY,mCAAG,WAAMC,GAAN,uFACHT,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA8BW,IAD3B,cACpBR,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKlB,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,uFACkBT,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA8BW,EAA9B,aADlB,cACCR,EADD,yBAEEA,EAASC,MAFX,kEAKA,IAAMS,EAAe,mCAAG,WAAMF,GAAN,uFACNT,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA8BW,EAA9B,aADM,cACvBR,EADuB,yBAEtBA,EAASC,KAAKU,SAFQ,2CAAH,qD,iHC6B5B,UAxDA,WACE,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACA,GAA0BN,EAAAA,EAAAA,UAAS,IAAnC,eAAOO,EAAP,KAAcC,EAAd,KA8BA,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,6FAChBJ,GAAW,GACLlB,EAAQU,EAAaa,IAAI,UAAY,gBAF3B,mBAIQxB,EAAAA,EAAAA,IAAaC,GAJrB,OAIRQ,EAJQ,OAKdM,EAAQN,GACRQ,EAAS,MANK,kDAQdA,EAAS,wBACTQ,QAAQT,MAAR,MATc,yBAWdG,GAAW,GAXG,6EAAH,qDAefI,GACD,GAAE,CAACZ,KAGF,4BACE,kBAAMe,SA1BW,SAAAC,GACnBA,EAAEC,iBACFhB,EAAgB,CAAEX,MAAOmB,GAC1B,EAuBG,WACE,kBACES,KAAK,OACLC,MAAOV,EACPW,aAAa,MACbC,WAAS,EACTC,YAAY,oBACZC,KAAK,QACLC,SAtCa,SAAAR,GACnBN,EAASM,EAAES,OAAON,MACnB,KAsCK,mBAAQD,KAAK,SAAb,uBAEDb,IAAS,yBAAMA,IACfE,GAAW,WACXJ,IAAQ,SAAC,UAAD,CAAWA,KAAMA,MAG/B,C","sources":["Service/MovieAPI.js","components/Movies/Movies.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '7a96b7d3f2fd15994813e6eeb1d3cb9e';\nconst baseUrl = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `/trending/movie/week?api_key=${API_KEY}&page=1&language=en-US&include_adult=false`\n  );\n  return response.data;\n};\n\nexport function searchMovies(query, page) {\n  return axios.get(`${baseUrl}/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query,\n      page,\n    },\n  });\n}\n\nexport const getMovieInfo = async movieId => {\n  const response = await axios.get(`${baseUrl}/movie/${movieId}`);\n  return response.data;\n};\n\nexport async function getMovieCredits(movieId) {\n  const response = await axios.get(`${baseUrl}/movie/${movieId}/credits`);\n  return response.data;\n}\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(`${baseUrl}/movie/${movieId}/reviews`);\n  return response.data.results;\n};\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovies } from 'Service/MovieAPI';\nimport MovieList from './Movies';\n\nfunction Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [list, setList] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [movie, setMovie] = useState('');\n\n  const handleChange = e => {\n    setMovie(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: movie });\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      const query = searchParams.get('query') || 'default_query';\n      try {\n        const results = await searchMovies(query);\n        setList(results);\n        setError(null);\n      } catch (error) {\n        setError('Something went wrong');\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [searchParams]);\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={movie}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Enter movie title\"\n          name=\"movie\"\n          onChange={handleChange}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      {error && <div>{error}</div>}\n      {loading && 'Loading '}\n      {list && <MovieList list={list} />}\n    </div>\n  );\n}\n\nexport default Movies;\n"],"names":["API_KEY","baseUrl","getTrendingMovies","axios","response","data","searchMovies","query","page","params","api_key","getMovieInfo","movieId","getMovieCredits","getMovieReviews","results","useSearchParams","searchParams","setSearchParams","useState","list","setList","error","setError","loading","setLoading","movie","setMovie","useEffect","fetchData","get","console","onSubmit","e","preventDefault","type","value","autoComplete","autoFocus","placeholder","name","onChange","target"],"sourceRoot":""}