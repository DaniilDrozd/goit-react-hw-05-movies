{"version":3,"file":"static/js/166.de7ea621.chunk.js","mappings":"+SAGAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJc,mCAKdC,SAAU,SAGL,IAAMC,EAAiB,mCAAG,gGAASC,EAAT,EAASA,KAClCC,EAAS,CACbD,KAAAA,GAF6B,SAIRJ,EAAAA,EAAAA,IAAA,sBAAiC,CAAEK,OAAAA,IAJ3B,cAIzBC,EAJyB,yBAKxBA,EAASC,MALe,2CAAH,sDAQjBC,EAAe,mCAAG,WAAOC,EAAOL,GAAd,gFACvBC,EAAS,CACbI,MAAAA,EACAL,KAAAA,GAH2B,SAKNJ,EAAAA,EAAAA,IAAA,gBAA2B,CAAEK,OAAAA,IALvB,cAKvBC,EALuB,yBAMtBA,EAASC,MANa,2CAAH,wDASfG,EAAY,mCAAG,WAAMC,GAAN,uFACHX,EAAAA,EAAAA,IAAA,iBAAoBW,EAApB,MADG,cACpBL,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZK,EAAe,mCAAG,WAAMD,GAAN,uFACNX,EAAAA,EAAAA,IAAA,iBAAoBW,EAApB,aADM,cACvBL,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfM,EAAe,mCAAG,WAAMF,GAAN,uFACNX,EAAAA,EAAAA,IAAA,iBAAoBW,EAApB,aADM,cACvBL,EADuB,yBAEtBA,EAASC,KAAKO,SAFQ,2CAAH,qD,iHCwB5B,UAxDA,WACE,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACA,GAA0BN,EAAAA,EAAAA,UAAS,IAAnC,eAAOO,EAAP,KAAcC,EAAd,KA8BA,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,6FAChBJ,GAAW,GACLf,EAAQO,EAAaa,IAAI,UAAY,gBAF3B,mBAIQrB,EAAAA,EAAAA,IAAgBC,GAJxB,OAIRK,EAJQ,OAKdM,EAAQN,GACRQ,EAAS,MANK,kDAQdA,EAAS,wBACTQ,QAAQT,MAAR,MATc,yBAWdG,GAAW,GAXG,6EAAH,qDAefI,GACD,GAAE,CAACZ,KAGF,4BACE,kBAAMe,SA1BW,SAAAC,GACnBA,EAAMC,iBACNhB,EAAgB,CAAER,MAAOgB,GAC1B,EAuBG,WACE,kBACES,KAAK,OACLC,MAAOV,EACPW,aAAa,MACbC,WAAS,EACTC,YAAY,oBACZC,KAAK,QACLC,SAtCa,SAAAR,GACnBN,EAASM,EAAMS,OAAON,MACvB,KAsCK,mBAAQD,KAAK,SAAb,uBAEDb,IAAS,yBAAMA,IACfE,GAAW,WACXJ,GAAQuB,MAAMC,QAAQxB,KAAS,SAAC,IAAD,CAAYA,KAAMA,MAGvD,C,kFC1DD,GAAiB,E,SC+BjB,MA3BA,YAA8B,IAATA,EAAQ,EAARA,KACbyB,GAAWC,EAAAA,EAAAA,MAEjB,OACE,0BACE,eAAIC,UAAWC,EAAAA,QAAf,SACG5B,EAAK6B,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACR,eAAIJ,UAAWC,EAAAA,QAAf,UACE,SAAC,KAAD,CAAMI,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMT,GAA1C,SACGK,KAF4BC,EADzB,OAUjB,C","sources":["Service/MovieAPI.js","components/Movies/Movies.js","components/MoviesList/MoviesList.module.css","components/MoviesList/MoviesList.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '7a96b7d3f2fd15994813e6eeb1d3cb9e';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const getTrendingMovies = async ({ page }) => {\n  const params = {\n    page,\n  };\n  const response = await axios.get(`/trending/movie/day`, { params });\n  return response.data;\n};\n\nexport const getSearchMovies = async (query, page) => {\n  const params = {\n    query,\n    page,\n  };\n  const response = await axios.get(`/search/movie`, { params });\n  return response.data;\n};\n\nexport const getMovieInfo = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/`);\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits`);\n  return response.data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews`);\n  return response.data.results;\n};\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchMovies } from 'Service/MovieAPI';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nfunction Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [list, setList] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [movie, setMovie] = useState('');\n\n  const handleChange = event => {\n    setMovie(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchParams({ query: movie });\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      const query = searchParams.get('query') || 'default_query';\n      try {\n        const results = await getSearchMovies(query);\n        setList(results);\n        setError(null);\n      } catch (error) {\n        setError('Something went wrong');\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [searchParams]);\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={movie}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Enter movie title\"\n          name=\"movie\"\n          onChange={handleChange}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      {error && <div>{error}</div>}\n      {loading && 'Loading '}\n      {list && Array.isArray(list) && <MoviesList list={list} />}\n    </div>\n  );\n}\n\nexport default Movies;\n","// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './MoviesList.module.css';\n\nfunction MovieList({ list }) {\n  const location = useLocation();\n\n  return (\n    <div>\n      <ul className={css.UlStyle}>\n        {list.map(({ title, id }) => (\n          <li className={css.LiStyle} key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nMovieList.propTypes = {\n  list: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n"],"names":["axios","api_key","language","getTrendingMovies","page","params","response","data","getSearchMovies","query","getMovieInfo","movieId","getMovieCredits","getMovieReviews","results","useSearchParams","searchParams","setSearchParams","useState","list","setList","error","setError","loading","setLoading","movie","setMovie","useEffect","fetchData","get","console","onSubmit","event","preventDefault","type","value","autoComplete","autoFocus","placeholder","name","onChange","target","Array","isArray","location","useLocation","className","css","map","title","id","to","state","from"],"sourceRoot":""}