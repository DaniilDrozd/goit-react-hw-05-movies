{"version":3,"file":"static/js/354.58a2476b.chunk.js","mappings":"iOAmFA,UA/EA,WACE,OAA0BA,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAhBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,8GAEYC,EAAAA,EAAAA,IAAaJ,GAFzB,OAENK,EAFM,OAGZV,EAASU,GACTR,EAAS,MAJG,gDAMZA,EAAS,wBANG,yBAQZE,GAAW,GARC,4EAAH,qDAYbI,GACD,GAAE,CAACH,KAGF,4BACE,SAAC,KAAD,CAAMM,GApBO,IAoBb,qBACCV,IAAS,yBAAMA,IACfE,EACC,cACEJ,GACF,4BACE,gBACEa,IACEb,EAAMc,YAAN,0CACuCd,EAAMc,aACzC,6EAENC,IAAKf,EAAMgB,MACXC,MAAM,MACNC,OAAO,SAET,wCAAgBC,KAAKC,MAA2B,GAArBpB,EAAMqB,cAAjC,SACA,4BACE,sCACA,uBAAIrB,EAAMsB,eAEZ,4BACE,oCACA,yBACGtB,EAAMuB,OAAOC,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,GACzB,OAAO,uBAAaD,GAALC,EAChB,aAKP,wDAEF,4BACE,2BACE,yBACE,SAAC,KAAD,CAAMd,GAAE,OAAUe,MAAO,CAAEC,KAxDpB,KAwDP,qBAIF,yBACE,SAAC,KAAD,CAAMhB,GAAE,UAAae,MAAO,CAAEC,KA7DvB,KA6DP,2BAKJ,SAAC,EAAAC,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,WAKT,C,+LC9EDC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJc,mCAKdC,SAAU,SAGL,IAAMC,EAAiB,mCAAG,gGAASC,EAAT,EAASA,KAClCC,EAAS,CACbD,KAAAA,GAF6B,SAIRJ,EAAAA,EAAAA,IAAA,sBAAiC,CAAEK,OAAAA,IAJ3B,cAIzBC,EAJyB,yBAKxBA,EAASC,MALe,2CAAH,sDAQjBC,EAAe,mCAAG,WAAOC,EAAOL,GAAd,gFACvBC,EAAS,CACbI,MAAAA,EACAL,KAAAA,GAH2B,SAKNJ,EAAAA,EAAAA,IAAA,gBAA2B,CAAEK,OAAAA,IALvB,cAKvBC,EALuB,yBAMtBA,EAASC,MANa,2CAAH,wDASf5B,EAAY,mCAAG,WAAMJ,GAAN,uFACHyB,EAAAA,EAAAA,IAAA,iBAAoBzB,IADjB,cACpB+B,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZG,EAAe,mCAAG,WAAMnC,GAAN,uFACNyB,EAAAA,EAAAA,IAAA,iBAAoBzB,EAApB,aADM,cACvB+B,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfI,EAAe,mCAAG,WAAMpC,GAAN,uFACNyB,EAAAA,EAAAA,IAAA,iBAAoBzB,EAApB,cADM,cACvB+B,EADuB,yBAEtBA,EAASC,KAAKK,SAFQ,2CAAH,qD","sources":["components/MovieDetails/MovieDetails.js","components/Service/MovieAPI.js"],"sourcesContent":["import React, { useEffect, useState, Suspense } from 'react';\nimport { useParams, Link, Outlet } from 'react-router-dom';\nimport { getMovieInfo } from '../Service/MovieAPI';\n\nfunction MovieDetails() {\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const { movieId } = useParams();\n  const backLink = '/';\n\n  useEffect(() => {\n    const Details = async () => {\n      try {\n        const movieData = await getMovieInfo(movieId);\n        setMovie(movieData);\n        setError(null);\n      } catch (error) {\n        setError('Something went wrong');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    Details();\n  }, [movieId]);\n\n  return (\n    <div>\n      <Link to={backLink}>Go back</Link>\n      {error && <div>{error}</div>}\n      {loading ? (\n        'Loading ...'\n      ) : movie ? (\n        <div>\n          <img\n            src={\n              movie.poster_path\n                ? `https://image.tmdb.org/t/p/w200/${movie.poster_path}`\n                : 'https://upload.wikimedia.org/wikipedia/commons/a/ac/No_image_available.svg'\n            }\n            alt={movie.title}\n            width=\"200\"\n            height=\"300\"\n          />\n          <p>User Score: {Math.round(movie.vote_average * 10)} %</p>\n          <div>\n            <h3>Overview</h3>\n            <p>{movie.overview}</p>\n          </div>\n          <div>\n            <h3>Genres</h3>\n            <div>\n              {movie.genres.map(({ name, id }) => {\n                return <p key={id}>{name}</p>;\n              })}\n            </div>\n          </div>\n        </div>\n      ) : (\n        <p>No movie details available.</p>\n      )}\n      <div>\n        <ul>\n          <li>\n            <Link to={`cast`} state={{ from: backLink }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to={`reviews`} state={{ from: backLink }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </div>\n  );\n}\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '7a96b7d3f2fd15994813e6eeb1d3cb9e';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const getTrendingMovies = async ({ page }) => {\n  const params = {\n    page,\n  };\n  const response = await axios.get(`/trending/movie/day`, { params });\n  return response.data;\n};\n\nexport const getSearchMovies = async (query, page) => {\n  const params = {\n    query,\n    page,\n  };\n  const response = await axios.get(`/search/movie`, { params });\n  return response.data;\n};\n\nexport const getMovieInfo = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`);\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits`);\n  return response.data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews?`);\n  return response.data.results;\n};\n"],"names":["useState","movie","setMovie","error","setError","loading","setLoading","movieId","useParams","useEffect","Details","getMovieInfo","movieData","to","src","poster_path","alt","title","width","height","Math","round","vote_average","overview","genres","map","name","id","state","from","Suspense","fallback","axios","api_key","language","getTrendingMovies","page","params","response","data","getSearchMovies","query","getMovieCredits","getMovieReviews","results"],"sourceRoot":""}