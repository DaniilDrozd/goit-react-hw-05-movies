{"version":3,"file":"static/js/541.7eb4aab0.chunk.js","mappings":"+SAEMA,EAAU,mCACVC,EAAU,+BAEHC,EAAiB,mCAAG,oGACRC,EAAAA,EAAAA,IAAA,uCACWH,EADX,+CADQ,cACzBI,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,qDAOvB,SAASC,EAAaC,EAAOC,GAClC,OAAOL,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAAqC,CAC1CQ,OAAQ,CACNC,QAASV,EACTO,MAAAA,EACAC,KAAAA,IAGL,CAEM,IAAMG,EAAY,mCAAG,WAAMC,GAAN,uFACHT,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA8BW,IAD3B,cACpBR,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKlB,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,uFACkBT,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA8BW,EAA9B,aADlB,cACCR,EADD,yBAEEA,EAASC,MAFX,kEAKA,IAAMS,EAAe,mCAAG,WAAMF,GAAN,uFACNT,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA8BW,EAA9B,aADM,cACvBR,EADuB,yBAEtBA,EAASC,KAAKU,SAFQ,2CAAH,qD,yGCuB5B,UAnDa,WACX,IAAQH,GAAYI,EAAAA,EAAAA,MAAZJ,QACR,GAAwBK,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGAEdF,GAAW,GACXF,EAAS,MAHK,UAKSR,EAAAA,EAAAA,IAAgBD,GALzB,OAKRR,EALQ,OAMde,EAAQf,GANM,gDAQdsB,QAAQN,MAAR,MACAC,EAAS,wBATK,yBAWdE,GAAW,GAXG,4EAAH,qDAefE,GACD,GAAE,CAACb,KAGF,2BACGQ,IAAS,yBAAMA,IACfE,GAAW,cACXJ,IACC,wBACGA,EAAKA,KAAKS,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,aAAcC,EAAlC,EAAkCA,GAAlC,OACb,2BACE,gBACEC,IAAKJ,EACLK,IACEH,EAAY,wCACyBA,GACjC,gFAGR,wBAAKF,KACL,uBAAIC,MAVGE,EADI,QAkBxB,C","sources":["Service/MovieAPI.js","components/Cast/Cast.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '7a96b7d3f2fd15994813e6eeb1d3cb9e';\nconst baseUrl = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `/trending/movie/week?api_key=${API_KEY}&page=1&language=en-US&include_adult=false`\n  );\n  return response.data;\n};\n\nexport function searchMovies(query, page) {\n  return axios.get(`${baseUrl}/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query,\n      page,\n    },\n  });\n}\n\nexport const getMovieInfo = async movieId => {\n  const response = await axios.get(`${baseUrl}/movie/${movieId}`);\n  return response.data;\n};\n\nexport async function getMovieCredits(movieId) {\n  const response = await axios.get(`${baseUrl}/movie/${movieId}/credits`);\n  return response.data;\n}\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(`${baseUrl}/movie/${movieId}/reviews`);\n  return response.data.results;\n};\n","import React, { useEffect, useState } from 'react';\nimport { getMovieCredits } from 'Service/MovieAPI';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        const response = await getMovieCredits(movieId);\n        setCast(response);\n      } catch (error) {\n        console.error(error);\n        setError('Something went wrong');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      {error && <div>{error}</div>}\n      {loading && 'Loading ...'}\n      {cast && (\n        <ul>\n          {cast.cast.map(({ name, character, profile_path, id }) => (\n            <li key={id}>\n              <img\n                alt={name}\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w92${profile_path}`\n                    : 'https://upload.wikimedia.org/wikipedia/commons/a/ac/No_image_available.svg'\n                }\n              />\n              <h3>{name}</h3>\n              <p>{character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["API_KEY","baseUrl","getTrendingMovies","axios","response","data","searchMovies","query","page","params","api_key","getMovieInfo","movieId","getMovieCredits","getMovieReviews","results","useParams","useState","cast","setCast","error","setError","loading","setLoading","useEffect","fetchCast","console","map","name","character","profile_path","id","alt","src"],"sourceRoot":""}