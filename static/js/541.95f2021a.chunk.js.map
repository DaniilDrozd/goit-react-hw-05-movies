{"version":3,"file":"static/js/541.95f2021a.chunk.js","mappings":"yNAuDA,UAnDa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGAEdF,GAAW,GACXF,EAAS,MAHK,UAKSK,EAAAA,EAAAA,IAAgBX,GALzB,OAKRY,EALQ,OAMdR,EAAQQ,GANM,gDAQdC,QAAQR,MAAR,MACAC,EAAS,wBATK,yBAWdE,GAAW,GAXG,4EAAH,qDAefE,GACD,GAAE,CAACV,KAGF,2BACGK,IAAS,yBAAMA,IACfE,GAAW,cACXJ,IACC,wBACGA,EAAKA,KAAKW,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,aAAcC,EAAlC,EAAkCA,GAAlC,OACb,2BACE,gBACEC,IAAKJ,EACLK,IACEH,EAAY,wCACyBA,GACjC,gFAGR,wBAAKF,KACL,uBAAIC,MAVGE,EADI,QAkBxB,C,+LClDDG,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJc,mCAKdC,SAAU,SAGL,IAAMC,EAAiB,mCAAG,gGAASC,EAAT,EAASA,KAClCC,EAAS,CACbD,KAAAA,GAF6B,SAIRJ,EAAAA,EAAAA,IAAA,sBAAiC,CAAEK,OAAAA,IAJ3B,cAIzBd,EAJyB,yBAKxBA,EAASe,MALe,2CAAH,sDAQjBC,EAAe,mCAAG,WAAOC,EAAOJ,GAAd,gFACvBC,EAAS,CACbG,MAAAA,EACAJ,KAAAA,GAH2B,SAKNJ,EAAAA,EAAAA,IAAA,gBAA2B,CAAEK,OAAAA,IALvB,cAKvBd,EALuB,yBAMtBA,EAASe,MANa,2CAAH,wDASfG,EAAY,mCAAG,WAAM9B,GAAN,uFACHqB,EAAAA,EAAAA,IAAA,iBAAoBrB,EAApB,MADG,cACpBY,EADoB,yBAEnBA,EAASe,MAFU,2CAAH,sDAKZhB,EAAe,mCAAG,WAAMX,GAAN,uFACNqB,EAAAA,EAAAA,IAAA,iBAAoBrB,EAApB,aADM,cACvBY,EADuB,yBAEtBA,EAASe,MAFa,2CAAH,sDAKfI,EAAe,mCAAG,WAAM/B,GAAN,uFACNqB,EAAAA,EAAAA,IAAA,iBAAoBrB,EAApB,cADM,cACvBY,EADuB,yBAEtBA,EAASe,KAAKK,SAFQ,2CAAH,qD","sources":["components/Cast/Cast.js","components/Service/MovieAPI.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getMovieCredits } from 'components/Service/MovieAPI';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        const response = await getMovieCredits(movieId);\n        setCast(response);\n      } catch (error) {\n        console.error(error);\n        setError('Something went wrong');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      {error && <div>{error}</div>}\n      {loading && 'Loading ...'}\n      {cast && (\n        <ul>\n          {cast.cast.map(({ name, character, profile_path, id }) => (\n            <li key={id}>\n              <img\n                alt={name}\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w92${profile_path}`\n                    : 'https://upload.wikimedia.org/wikipedia/commons/a/ac/No_image_available.svg'\n                }\n              />\n              <h3>{name}</h3>\n              <p>{character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '7a96b7d3f2fd15994813e6eeb1d3cb9e';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const getTrendingMovies = async ({ page }) => {\n  const params = {\n    page,\n  };\n  const response = await axios.get(`/trending/movie/day`, { params });\n  return response.data;\n};\n\nexport const getSearchMovies = async (query, page) => {\n  const params = {\n    query,\n    page,\n  };\n  const response = await axios.get(`/search/movie`, { params });\n  return response.data;\n};\n\nexport const getMovieInfo = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/`);\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits`);\n  return response.data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews?`);\n  return response.data.results;\n};\n"],"names":["movieId","useParams","useState","cast","setCast","error","setError","loading","setLoading","useEffect","fetchCast","getMovieCredits","response","console","map","name","character","profile_path","id","alt","src","axios","api_key","language","getTrendingMovies","page","params","data","getSearchMovies","query","getMovieInfo","getMovieReviews","results"],"sourceRoot":""}