{"version":3,"file":"static/js/625.a58d149e.chunk.js","mappings":"8LA8BA,UA1BA,WACE,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,IACXE,EAAAA,EAAAA,IAAkB,CAAEC,KAAM,IACvBC,MAAK,SAAAC,GACJT,EAAUS,EAAQA,SAClBP,EAAS,KACV,IACAQ,OAAM,SAAAT,GACLC,EAAS,uBACV,IACAS,SAAQ,kBAAMP,GAAW,EAAjB,GACZ,GAAE,KAGD,2BACGH,IAAS,yBAAMA,IACfE,EAAU,YAAa,SAAC,IAAD,CAAYS,KAAMb,IAAY,MAG3D,C,kFC3BD,GAAiB,E,SC+BjB,MA3BA,YAA8B,IAATa,EAAQ,EAARA,KACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,0BACE,eAAIC,UAAWC,EAAAA,QAAf,SACGJ,EAAKK,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACR,eAAIJ,UAAWC,EAAAA,QAAf,UACE,SAAC,KAAD,CAAMI,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMT,GAA1C,SACGK,KAF4BC,EADzB,OAUjB,C,+LClBDI,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJc,mCAKdC,SAAU,SAGL,IAAMnB,EAAiB,mCAAG,gGAASC,EAAT,EAASA,KAClCmB,EAAS,CACbnB,KAAAA,GAF6B,SAIRgB,EAAAA,EAAAA,IAAA,sBAAiC,CAAEG,OAAAA,IAJ3B,cAIzBC,EAJyB,yBAKxBA,EAASC,MALe,2CAAH,sDAQjBC,EAAe,mCAAG,WAAOC,EAAOvB,GAAd,gFACvBmB,EAAS,CACbI,MAAAA,EACAvB,KAAAA,GAH2B,SAKNgB,EAAAA,EAAAA,IAAA,gBAA2B,CAAEG,OAAAA,IALvB,cAKvBC,EALuB,yBAMtBA,EAASC,MANa,2CAAH,wDASfG,EAAY,mCAAG,WAAMC,GAAN,uFACHT,EAAAA,EAAAA,IAAA,iBAAoBS,IADjB,cACpBL,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZK,EAAe,mCAAG,WAAMD,GAAN,uFACNT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,aADM,cACvBL,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfM,EAAe,mCAAG,WAAMF,GAAN,uFACNT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,cADM,cACvBL,EADuB,yBAEtBA,EAASC,KAAKnB,SAFQ,2CAAH,qD","sources":["components/Home/Home.js","components/MoviesList/MoviesList.module.css","components/MoviesList/MoviesList.js","components/Service/MovieAPI.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getTrendingMovies } from 'components/Service/MovieAPI';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nfunction Home() {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    getTrendingMovies({ page: 1 })\n      .then(results => {\n        setMovies(results.results);\n        setError(null);\n      })\n      .catch(error => {\n        setError('Something went wrong');\n      })\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <div>\n      {error && <div>{error}</div>}\n      {loading ? 'Loading ' : <MoviesList list={movies} />}{' '}\n    </div>\n  );\n}\n\nexport default Home;\n","// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './MoviesList.module.css';\n\nfunction MovieList({ list }) {\n  const location = useLocation();\n\n  return (\n    <div>\n      <ul className={css.UlStyle}>\n        {list.map(({ title, id }) => (\n          <li className={css.LiStyle} key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nMovieList.propTypes = {\n  list: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n","import axios from 'axios';\n\nconst API_KEY = '7a96b7d3f2fd15994813e6eeb1d3cb9e';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const getTrendingMovies = async ({ page }) => {\n  const params = {\n    page,\n  };\n  const response = await axios.get(`/trending/movie/day`, { params });\n  return response.data;\n};\n\nexport const getSearchMovies = async (query, page) => {\n  const params = {\n    query,\n    page,\n  };\n  const response = await axios.get(`/search/movie`, { params });\n  return response.data;\n};\n\nexport const getMovieInfo = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`);\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits`);\n  return response.data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews?`);\n  return response.data.results;\n};\n"],"names":["useState","movies","setMovies","error","setError","loading","setLoading","useEffect","getTrendingMovies","page","then","results","catch","finally","list","location","useLocation","className","css","map","title","id","to","state","from","axios","api_key","language","params","response","data","getSearchMovies","query","getMovieInfo","movieId","getMovieCredits","getMovieReviews"],"sourceRoot":""}