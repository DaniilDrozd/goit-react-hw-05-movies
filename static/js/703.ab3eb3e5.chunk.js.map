{"version":3,"file":"static/js/703.ab3eb3e5.chunk.js","mappings":"8PACA,EAAsB,oBAAtB,EAAiD,qBAAjD,EAA8E,sB,SC+D9E,MA3DA,WACE,OAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACA,GAA0BN,EAAAA,EAAAA,UAAS,IAAnC,eAAOO,EAAP,KAAcC,EAAd,KA8BA,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,6FAChBJ,GAAW,GACLK,EAAQb,EAAac,IAAI,UAAY,gBAF3B,mBAIQC,EAAAA,EAAAA,IAAgBF,GAJxB,OAIRG,EAJQ,OAKdZ,EAAQY,GACRV,EAAS,MANK,kDAQdA,EAAS,wBACTW,QAAQZ,MAAR,MATc,yBAWdG,GAAW,GAXG,6EAAH,qDAefI,GACD,GAAE,CAACZ,KAGF,4BACE,kBAAMkB,UAAWC,EAAUC,SA1BV,SAAAC,GACnBA,EAAMC,iBACNrB,EAAgB,CAAEY,MAAOJ,GAC1B,EAuBG,WACE,kBACES,UAAWC,EACXI,KAAK,OACLC,MAAOf,EACPgB,aAAa,MACbC,WAAS,EACTC,YAAY,oBACZC,KAAK,QACLC,SAvCa,SAAAR,GACnBX,EAASW,EAAMS,OAAON,MACvB,KAuCK,mBAAQD,KAAK,SAASL,UAAWC,EAAjC,uBAIDd,IAAS,yBAAMA,IACfE,GAAW,WACXJ,GAAQ4B,MAAMC,QAAQ7B,KAAS,SAAC8B,EAAA,EAAD,CAAY9B,KAAMA,MAGvD,C,kFC7DD,EAA0B,4BAA1B,EAAmE,+B,SCmCnE,MA/BA,YAA8B,IAATA,EAAQ,EAARA,KACb+B,GAAWC,EAAAA,EAAAA,MAEjB,OACE,0BACE,eAAIjB,UAAWC,EAAf,SACGhB,EAAKiC,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACR,yBACE,SAAC,KAAD,CACEC,GAAE,kBAAaD,GACfE,MAAO,CAAEC,KAAMP,GACfhB,UAAWC,EAHb,SAKGkB,KANIC,EADD,OAcjB,C,+LCtBDI,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJc,mCAKdC,SAAU,SAGL,IAAMC,EAAiB,mCAAG,gGAASC,EAAT,EAASA,KAClCC,EAAS,CACbD,KAAAA,GAF6B,SAIRJ,EAAAA,EAAAA,IAAA,sBAAiC,CAAEK,OAAAA,IAJ3B,cAIzBC,EAJyB,yBAKxBA,EAASC,MALe,2CAAH,sDAQjBlC,EAAe,mCAAG,WAAOmC,EAAWrC,GAAlB,gFACvBkC,EAAS,CACblC,MAAAA,GAF2B,SAKN6B,EAAAA,EAAAA,IAAA,8BAAiCQ,GAAa,CACnEH,OAAAA,IAN2B,cAKvBC,EALuB,yBAStBA,EAASC,KAAKjC,SATQ,2CAAH,wDAYfmC,EAAY,mCAAG,WAAMC,GAAN,uFACHV,EAAAA,EAAAA,IAAA,iBAAoBU,IADjB,cACpBJ,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZI,EAAe,mCAAG,WAAMD,GAAN,uFACNV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,aADM,cACvBJ,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfK,EAAe,mCAAG,WAAMF,GAAN,uFACNV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,cADM,cACvBJ,EADuB,yBAEtBA,EAASC,KAAKjC,SAFQ,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.js","webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.js","components/Service/MovieAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Movies_btn__0UPE6\",\"form\":\"Movies_form__mp42q\",\"input\":\"Movies_input__OE3ef\"};","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchMovies } from 'components/Service/MovieAPI';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport css from './Movies.module.css';\nfunction Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [list, setList] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [movie, setMovie] = useState('');\n\n  const handleChange = event => {\n    setMovie(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchParams({ query: movie });\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      const query = searchParams.get('query') || 'default_query';\n      try {\n        const results = await getSearchMovies(query);\n        setList(results);\n        setError(null);\n      } catch (error) {\n        setError('Something went wrong');\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [searchParams]);\n\n  return (\n    <div>\n      <form className={css.form} onSubmit={handleSubmit}>\n        <input\n          className={css.input}\n          type=\"text\"\n          value={movie}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Write movie title\"\n          name=\"movie\"\n          onChange={handleChange}\n        />\n        <button type=\"submit\" className={css.btn}>\n          Search\n        </button>\n      </form>\n      {error && <div>{error}</div>}\n      {loading && 'Loading '}\n      {list && Array.isArray(list) && <MoviesList list={list} />}\n    </div>\n  );\n}\n\nexport default Movies;\n","// extracted by mini-css-extract-plugin\nexport default {\"UlStyle\":\"MoviesList_UlStyle__5lG5T\",\"Stylelinks\":\"MoviesList_Stylelinks__hLVBg\"};","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './MoviesList.module.css';\n\nfunction MovieList({ list }) {\n  const location = useLocation();\n\n  return (\n    <div>\n      <ul className={css.UlStyle}>\n        {list.map(({ title, id }) => (\n          <li key={id}>\n            <Link\n              to={`/movies/${id}`}\n              state={{ from: location }}\n              className={css.Stylelinks}\n            >\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nMovieList.propTypes = {\n  list: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default MovieList;\n","import axios from 'axios';\n\nconst API_KEY = '7a96b7d3f2fd15994813e6eeb1d3cb9e';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const getTrendingMovies = async ({ page }) => {\n  const params = {\n    page,\n  };\n  const response = await axios.get(`/trending/movie/day`, { params });\n  return response.data;\n};\n\nexport const getSearchMovies = async (movieName, query) => {\n  const params = {\n    query,\n  };\n\n  const response = await axios.get(`/search/movie?query=${movieName}`, {\n    params,\n  });\n\n  return response.data.results;\n};\n\nexport const getMovieInfo = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`);\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits`);\n  return response.data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews?`);\n  return response.data.results;\n};\n"],"names":["useSearchParams","searchParams","setSearchParams","useState","list","setList","error","setError","loading","setLoading","movie","setMovie","useEffect","fetchData","query","get","getSearchMovies","results","console","className","css","onSubmit","event","preventDefault","type","value","autoComplete","autoFocus","placeholder","name","onChange","target","Array","isArray","MoviesList","location","useLocation","map","title","id","to","state","from","axios","api_key","language","getTrendingMovies","page","params","response","data","movieName","getMovieInfo","movieId","getMovieCredits","getMovieReviews"],"sourceRoot":""}