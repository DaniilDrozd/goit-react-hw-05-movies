{"version":3,"file":"static/js/785.24e9e1d9.chunk.js","mappings":"+SAGAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJc,mCAKdC,SAAU,SAGL,IAAMC,EAAiB,mCAAG,gGAASC,EAAT,EAASA,KAClCC,EAAS,CACbD,KAAAA,GAF6B,SAIRJ,EAAAA,EAAAA,IAAA,sBAAiC,CAAEK,OAAAA,IAJ3B,cAIzBC,EAJyB,yBAKxBA,EAASC,MALe,2CAAH,sDAQjBC,EAAe,mCAAG,WAAOC,EAAOL,GAAd,gFACvBC,EAAS,CACbI,MAAAA,EACAL,KAAAA,GAH2B,SAKNJ,EAAAA,EAAAA,IAAA,gBAA2B,CAAEK,OAAAA,IALvB,cAKvBC,EALuB,yBAMtBA,EAASC,MANa,2CAAH,wDASfG,EAAY,mCAAG,WAAMC,GAAN,uFACHX,EAAAA,EAAAA,IAAA,iBAAoBW,EAApB,MADG,cACpBL,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZK,EAAe,mCAAG,WAAMD,GAAN,uFACNX,EAAAA,EAAAA,IAAA,iBAAoBW,EAApB,aADM,cACvBL,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfM,EAAe,mCAAG,WAAMF,GAAN,uFACNX,EAAAA,EAAAA,IAAA,iBAAoBW,EAApB,aADM,cACvBL,EADuB,yBAEtBA,EAASC,KAAKO,SAFQ,2CAAH,qD,yGCc5B,UA/CgB,WACd,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,6FAChBF,GAAW,GADK,SAIRZ,EAAUI,EAASW,SAASC,MAAM,KAAKC,MAJ/B,UAKQf,EAAAA,EAAAA,IAAgBF,GALxB,OAKRG,EALQ,OAMdK,EAAWL,GACXO,EAAS,MAPK,kDASdA,EAAS,wBACTQ,QAAQT,MAAR,MAVc,yBAYdG,GAAW,GAZG,6EAAH,qDAgBfE,GACD,GAAE,CAACV,KAGF,2BACGK,IAAS,yBAAMA,IACfE,EACC,UACEJ,GAAWA,EAAQY,OAAS,GAC9B,wBACGZ,EAAQa,KAAI,SAAAC,GAAM,OACjB,2BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFJF,EAAOG,GADC,OAQrB,mDAIP,C","sources":["Service/MovieAPI.js","components/Reviews/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '7a96b7d3f2fd15994813e6eeb1d3cb9e';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const getTrendingMovies = async ({ page }) => {\n  const params = {\n    page,\n  };\n  const response = await axios.get(`/trending/movie/day`, { params });\n  return response.data;\n};\n\nexport const getSearchMovies = async (query, page) => {\n  const params = {\n    query,\n    page,\n  };\n  const response = await axios.get(`/search/movie`, { params });\n  return response.data;\n};\n\nexport const getMovieInfo = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/`);\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits`);\n  return response.data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews`);\n  return response.data.results;\n};\n","import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getMovieReviews } from 'Service/MovieAPI';\n\nconst Reviews = () => {\n  const location = useLocation();\n  const [reviews, setReviews] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n\n      try {\n        const movieId = location.pathname.split('/').pop();\n        const results = await getMovieReviews(movieId);\n        setReviews(results);\n        setError(null);\n      } catch (error) {\n        setError('Something went wrong');\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [location]);\n\n  return (\n    <div>\n      {error && <div>{error}</div>}\n      {loading ? (\n        'Loading'\n      ) : reviews && reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <h3>{review.author}</h3>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No reviews available.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","api_key","language","getTrendingMovies","page","params","response","data","getSearchMovies","query","getMovieInfo","movieId","getMovieCredits","getMovieReviews","results","location","useLocation","useState","reviews","setReviews","error","setError","loading","setLoading","useEffect","fetchData","pathname","split","pop","console","length","map","review","author","content","id"],"sourceRoot":""}