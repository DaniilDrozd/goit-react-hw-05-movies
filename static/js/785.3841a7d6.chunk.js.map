{"version":3,"file":"static/js/785.3841a7d6.chunk.js","mappings":"+SAEMA,EAAU,mCACVC,EAAU,+BAEHC,EAAiB,mCAAG,oGACRC,EAAAA,EAAAA,IAAA,uCACWH,EADX,+CADQ,cACzBI,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,qDAOvB,SAASC,EAAaC,EAAOC,GAClC,OAAOL,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAAqC,CAC1CQ,OAAQ,CACNC,QAASV,EACTO,MAAAA,EACAC,KAAAA,IAGL,CAEM,IAAMG,EAAY,mCAAG,WAAMC,GAAN,uFACHT,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA8BW,IAD3B,cACpBR,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKlB,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,uFACkBT,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA8BW,EAA9B,aADlB,cACCR,EADD,yBAEEA,EAASC,MAFX,kEAKA,IAAMS,EAAe,mCAAG,WAAMF,GAAN,uFACNT,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA8BW,EAA9B,aADM,cACvBR,EADuB,yBAEtBA,EAASC,KAAKU,SAFQ,2CAAH,qD,yGCkB5B,UA9CgB,WACd,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,6FAChBF,GAAW,GADK,SAIRZ,EAAUI,EAASW,SAASC,MAAM,KAAKC,MAJ/B,UAKQf,EAAAA,EAAAA,IAAgBF,GALxB,OAKRG,EALQ,OAMdK,EAAWL,GACXO,EAAS,MAPK,kDASdA,EAAS,wBACTQ,QAAQT,MAAR,MAVc,yBAYdG,GAAW,GAZG,6EAAH,qDAgBfE,GACD,GAAE,CAACV,KAGF,2BACGK,IAAS,yBAAMA,IACfE,EACC,WAEA,wBACGJ,GACCA,EAAQY,KAAI,SAAAC,GAAM,OAChB,2BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFJF,EAAOG,GADA,QAU7B,C","sources":["Service/MovieAPI.js","components/Reviews/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '7a96b7d3f2fd15994813e6eeb1d3cb9e';\nconst baseUrl = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `/trending/movie/week?api_key=${API_KEY}&page=1&language=en-US&include_adult=false`\n  );\n  return response.data;\n};\n\nexport function searchMovies(query, page) {\n  return axios.get(`${baseUrl}/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query,\n      page,\n    },\n  });\n}\n\nexport const getMovieInfo = async movieId => {\n  const response = await axios.get(`${baseUrl}/movie/${movieId}`);\n  return response.data;\n};\n\nexport async function getMovieCredits(movieId) {\n  const response = await axios.get(`${baseUrl}/movie/${movieId}/credits`);\n  return response.data;\n}\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(`${baseUrl}/movie/${movieId}/reviews`);\n  return response.data.results;\n};\n","import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getMovieReviews } from 'Service/MovieAPI';\n\nconst Reviews = () => {\n  const location = useLocation();\n  const [reviews, setReviews] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n\n      try {\n        const movieId = location.pathname.split('/').pop();\n        const results = await getMovieReviews(movieId);\n        setReviews(results);\n        setError(null);\n      } catch (error) {\n        setError('Something went wrong');\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [location]);\n\n  return (\n    <div>\n      {error && <div>{error}</div>}\n      {loading ? (\n        'Loading'\n      ) : (\n        <ul>\n          {reviews &&\n            reviews.map(review => (\n              <li key={review.id}>\n                <h3>{review.author}</h3>\n                <p>{review.content}</p>\n              </li>\n            ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","baseUrl","getTrendingMovies","axios","response","data","searchMovies","query","page","params","api_key","getMovieInfo","movieId","getMovieCredits","getMovieReviews","results","location","useLocation","useState","reviews","setReviews","error","setError","loading","setLoading","useEffect","fetchData","pathname","split","pop","console","map","review","author","content","id"],"sourceRoot":""}